---
# disclaimer: docker does not support multiple registries, so projects cannot mix registry credentials within their service declarations.
- name: create .docker folder inside project path
  ansible.builtin.file:
    path: "{{ project_path }}/.docker/"
    state: directory
    recurse: yes
  when: docker_registry_url != "" or docker_username != ""

- name: log in to the container registry
  community.docker.docker_login:
    username: "{{ docker_username }}"
    password: "{{ docker_password }}"
    registry_url: "{{ docker_registry_url }}"
    config_path: "{{ project_path }}/.docker/config.json"
  when: docker_registry_url != "" or docker_username != ""

- name: create project directory
  ansible.builtin.file:
    path: "{{ project_path }}"
    state: directory
    recurse: yes

- name: copy docker-compose.yaml to remote
  ansible.builtin.copy:
    dest: "{{ project_path }}/docker-compose.yaml"
    content: "{{ compose_spec | to_nice_yaml | mandatory }}"
  register: dockeryaml

- name: copy over systemd services
  ansible.builtin.template:
    src: "{{ role_path }}/templates/compose.service.j2"
    dest: "/etc/systemd/system/{{ service_name }}.service"

- name: copy over systemd services and timers
  ansible.builtin.template:
    src: "{{ item.template }}"
    dest: "/etc/systemd/system/{{ item.unit_file }}"
  with_items:
    - template: "{{ role_path }}/templates/reload.service.j2"
      unit_file: "{{ service_name }}-cron.service"
    - template: "{{ role_path }}/templates/reload.timer.j2"
      unit_file: "{{ service_name }}-cron.timer"
  when: compose_service_autoupdate|default(True)|bool

- name: install docker-compose systemd service for the project
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: "{{ compose_service_autostart|bool | ternary('started', 'stopped', omit) }}"
    enabled: yes
    daemon_reload: yes
    masked: no
  with_items:
    - "{{ service_name }}.service"

- name: install docker-compose cron systemd service for the project
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: yes
    daemon_reload: yes
    masked: no
  with_items:
    - "{{ service_name }}-cron.service"
    - "{{ service_name }}-cron.timer"
  when: compose_service_autoupdate|default(True)|bool

- name: ensure project service is started
  ansible.builtin.systemd:
    name: "{{ service_name }}.service"
    state: started
  when: compose_service_autostart|bool

- name: ensure service is not started (auto-start disabled)
  ansible.builtin.systemd:
    name: "{{ service_name }}.service"
    state: stopped
  when: not compose_service_autostart|bool

- name: Reload the service if the config changed
  systemd:
    name: "{{ service_name }}.service"
    state: reloaded
  when: dockeryaml.changed
